<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/aop
http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-3.0.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx.xsd">

	<context:component-scan base-package="com.advanced" />

	<!-- domain objects -->
	<bean id="address1" class="com.advanced.domain.Address">
		<property name="zip_code" value="62738"></property>
		<property name="street" value="street1"></property>

	</bean>

	<bean id="person" class="com.advanced.domain.Person">
		<property name="fullname" value="hans test">
		</property>
		<property name="addresses">
			<list>
				<ref bean="address1" />
			</list>
		</property>
	</bean>

	<!-- services -->
	<bean id="addressService" class="com.advanced.service.AddressService">
		<property name="addressDao" ref="addressDao" />
	</bean>

	<bean id="personService" class="com.advanced.service.PersonService">
		<property name="personDao" ref="personDao" />
	</bean>

	<!-- data acces objeccts -->
	<bean id="addressDao" class="com.advanced.dao.AddressDAO">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="personDao" class="com.advanced.dao.PersonDAO">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- no external hibernate.cfg.xml files needed, entity mappings can be 
			declared here -->
		<property name="packagesToScan">
			<list>
				<value>com.advanced.dao</value>
				<value>com.advanced.domain</value>
				<value>com.advanced.service</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.show_sql">true</prop>
				<!-- drops table every time a transaction is executed! -->
				<prop key="hibernate.hbm2ddl.auto">create</prop>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
			</props>
		</property>
	</bean>

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/test" />
		<property name="username" value="root" />
		<property name="password" value="password" />
	</bean>

	<!-- Transaction Manager -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager"
		p:sessionFactory-ref="sessionFactory">
	</bean>
	<tx:annotation-driven proxy-target-class="false"
		transaction-manager="transactionManager" />



</beans>